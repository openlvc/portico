<config xmlns="urn:org:jgroups"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:org:jgroups http://www.jgroups.org/schema/JGroups-3.1.xsd">

    <UDP bind_addr="${portico.jgroups.udp.bindAddress:SITE_LOCAL}"
         mcast_group_addr="${portico.jgroups.udp.address:239.20.9.13}"
         mcast_port="${portico.jgroups.udp.port:20913}"
         mcast_recv_buf_size="${portico.jgroups.udp.receiveBuffer:25M}"
         mcast_send_buf_size="${portico.jgroups.udp.sendBuffer:640K}"
         ucast_recv_buf_size="8M"
         ucast_send_buf_size="640K"
         loopback="true"
         
         enable_bundling="${portico.jgroups.bundling:true}"
         max_bundle_size="${portico.jgroups.bundling.maxSize:64K}"
         max_bundle_timeout="${portico.jgroups.bundling.maxTime:5}"

         timer_type="new"
         timer.min_threads="4"
         timer.max_threads="10"
         timer.keep_alive_time="3000"
         timer.queue_max_size="500"

         thread_pool.enabled="true"
         thread_pool.min_threads="2"
         thread_pool.max_threads="8"
         thread_pool.keep_alive_time="5000"
         thread_pool.queue_enabled="true"
         thread_pool.queue_max_size="10000"
         thread_pool.rejection_policy="Run"

         oob_thread_pool.enabled="true"
         oob_thread_pool.min_threads="1"
         oob_thread_pool.max_threads="1"
         oob_thread_pool.keep_alive_time="5000"
         oob_thread_pool.queue_enabled="true"
         oob_thread_pool.queue_max_size="100"
         oob_thread_pool.rejection_policy="Run"
    />

    <!-- Discovery protocol. Timeout of 2 seconds, with a random stagger of
         100ms applied to ensure people don't all fire up at once -->
    <PING timeout="2000"
          stagger_timeout="100"
          num_initial_members="1"
          break_on_coord_rsp="true"/>

    <!-- Detect when a federate has gone tits-up with a simple heartbeat algorithm.
         We can turn on countMessages which will treat all messages received from a
         federate as a heartbeat, but this add overhead and apparently isn't
         recommended. Leave it off for now -->
    <FD_ALL/>

    <!-- When we think we have a dead federate, as determined by the FD protocols,
         we need to finally verify this. VERIFY_SUSPECT will ping the suspect,
         waiting at most timeout millis before giving up and calling it dead -->
    <VERIFY_SUSPECT timeout="500"/>

    <!-- NAKACK2 provides the reliable, ordered properties to our comms -->
    <pbcast.NAKACK2 xmit_interval="1000"
                    xmit_table_num_rows="100"
                    xmit_table_msgs_per_row="2000"
                    xmit_table_max_compaction_time="30000"
                    max_msg_batch_size="500"
                    use_mcast_xmit="false"
                    discard_delivered_msgs="true"/>

    <!-- UNICAST2 delivers reliable and ordered messaging for unicast UDP messages -->
    <UNICAST2 xmit_interval="2000"
              xmit_table_num_rows="100"
              xmit_table_msgs_per_row="2000"
              xmit_table_max_compaction_time="60000"
              conn_expiry_timeout="60000"
              max_msg_batch_size="500"/>

    <!-- RSVP causes message send with the RSVP header to block the sending call
         until all recipients have acknowledged they got it. If ack_on_delivery
         is set true, an ACK is only be sent after the message has been processed -->
    <RSVP ack_on_delivery="true" throw_exception_on_timeout="true"/>

    <!-- The STABLE protocol helps ensure only the minimum number of messages are
         kept around in case they are needed for retransmission.  -->
    <pbcast.STABLE max_bytes="4M"
                   stability_delay="1000"
                   desired_avg_gossip="50000"
                   cap="0.1"/>

    <!-- GMS provides generation Group Memebership Services, handling group join
         requests, view updates and changes and anything membership related -->
    <pbcast.GMS print_local_addr="true"
                join_timeout="${portico.jgroups.gms.jointimeout:3000}"
                view_bundling="true"/>

    <!-- Flow control prevents any single sender overwhelming slower receivers
         with messages which could cause them to be dropped -->
    <UFC max_credits="2M" min_threshold="0.4"/>
    <MFC max_credits="${portico.jgroups.flow.credits:2M}" 
         min_threshold="${portico.jgroups.flow.threshold:0.4}"/>

    <!-- FRAG2 breaks up large messages into smaller sizes so they can be send in chunks -->
    <FRAG2 frag_size="${portico.jgroups.frag.size:60K}"/>

    <!-- FLUSH forces all group members to send all pending messages prior to
         some event such as the joining of a new member -->
    <pbcast.FLUSH retry_timeout="3000"/>
</config>
